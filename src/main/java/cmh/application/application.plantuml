@startuml

title __APPLICATION's Class Diagram__\n

  namespace cmh.application {
    interface cmh.application.Breakable {
        {abstract} + break_()
        {abstract} + damage()
        {abstract} + onBreakEvent()
    }
  }
  

  namespace cmh.application {
    enum Condition {
      BROKEN
      INTACT
    }
  }
  

  namespace cmh.application {
    class cmh.application.Cop {
        {static} - amount : int
        - name : String
        + Cop()
        + Cop()
        + equals()
        + getMeleeWeapon()
        + getName()
        + getRangedWeapon()
        + hashCode()
        + melee()
        + setLocation()
        + setMeleeWeapon()
        + setRangedWeapon()
        + shoot()
        + shout()
        + swing()
        + toString()
    }
  }
  

  namespace cmh.application {
    interface cmh.application.DamageDealer {
        {abstract} + dealDamage()
    }
  }
  

  namespace cmh.application {
    class cmh.application.Device {
        + Device()
        + Device()
    }
  }
  

  namespace cmh.application {
    class cmh.application.Location {
        - name : String
        + Location()
        + equals()
        + hashCode()
        + toString()
    }
  }
  

  namespace cmh.application {
    class cmh.application.Main {
        {static} + main()
    }
  }
  

  namespace cmh.application {
    class cmh.application.Rocket {
        {static} - amount : int
        + Rocket()
        + Rocket()
        + damage()
        + getNearRocket()
        + onBreakEvent()
    }
  }
  

  namespace cmh.application {
    class cmh.application.Squad {
        - destroyPhraseIndex : int
        - destroyPhrases : String[]
        - members : Cop[]
        - name : String
        + Squad()
        + attack()
        + chargePhrase()
        + getLeader()
        + getMembers()
        + moveTo()
        + randomCop()
        + setLeader()
        + setMembers()
    }
  }
  

  namespace cmh.application {
    abstract class cmh.application.Thing {
        - name : String
        - onBreakPhrase : String
        + Thing()
        + Thing()
        + break_()
        + damage()
        + equals()
        + getCondition()
        + getName()
        + hashCode()
        + onBreakEvent()
        + toString()
    }
  }
  

  namespace cmh.application {
    class cmh.application.Weapon {
        {static} - amount : int
        + Weapon()
        + Weapon()
        + dealDamage()
    }
  }
  

  cmh.application.Cop o-- cmh.application.Location : location
  cmh.application.Cop o-- cmh.application.Weapon : meleeWeapon
  cmh.application.Cop o-- cmh.application.Weapon : rangedWeapon
  cmh.application.Device -up-|> cmh.application.Thing
  cmh.application.Rocket -up-|> cmh.application.Thing
  cmh.application.Rocket o-- cmh.application.Location : nearRocket
  cmh.application.Squad o-- cmh.application.Cop : leader
  cmh.application.Thing .up.|> cmh.application.Breakable
  cmh.application.Thing o-- cmh.application.Condition : condition
  cmh.application.Weapon .up.|> cmh.application.DamageDealer
  cmh.application.Weapon -up-|> cmh.application.Thing


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
